1) Python Environment (Miniconda)

1.1) Install Miniconda
# Miniconda: https://docs.conda.io/en/latest/miniconda.html

wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh
bash Miniconda3-py39_4.10.3-Linux-x86_64.sh

# Do you accept the license terms?  yes
# Miniconda3 will now be installed into this location:  [/home/userxx/miniconda3] >>> <ENTER>
# * Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] yes
# create login script:  miniconda3/bin/conda init

# run login script (so, you don't have to manually login by yourself)
source .bashrc

1.2) Manage Python packages
pip list
pip install gdown
pip install youtube-dl
pip install numpy==1.20.1
conda list
pip list

PyTorch:  https://pytorch.org/get-started/locally/

1.3) Multiple Environments
# create Python 2.7 env (py2)
conda create --name py2 python=2.7

# view all envs
ls -al miniconda3/envs

# Switch to py2 env
conda activate py2
pip list (check lib in py2 environment)

# check current python
which python
python --version

# switch back to base
conda deactivate 
or
conda activate base

# install numpy
pip list | grep numpy (check numpy version)
conda activate base
pip install numpy
conda activate py2
pip install numpy==1.16.6

# create:  numpy_version.py
python numpy_version.py
miniconda3/envs/py2/bin/python numpy_version.py

1.4) Remove environment
conda remove --name py2 --all

# remove miniconda
# rm -rf miniconda3 .conda
# edit: .bashrc

2) Visual Studio Code - Remote SSH
https://code.visualstudio.com/

2.1) Install Extensions
# install: Remote-SSH
# install: Python
# create: "hello.py", run: "hello.py"

2.2) New Terminal / Split - move windows
# try these commands in terminal
ls -al
pwd
w
uptime
top
htop

# where Aj.Kreangkai put all the package we need to download
ls /data/ 
# install cached python packages
pip install -r /data/all.txt

2.3) Object detection
# YOLOv5: https://github.com/ultralytics/yolov5 

git  clone  https://github.com/ultralytics/yolov5
cd   yolov5

# download pretrained weights
wget https://github.com/ultralytics/yolov5/releases/download/v6.0/yolov5s.pt

# install required python packages
pip  install -r requirements.txt

# view input image
# run: 
python detect.py --source data/images/bus.jpg
# view output image

2.4) File Transfer
# Try your own images [upload/ download]
# put result in:
# https://drive.google.com/drive/folders/1-PLLjNEChrEwVHuSgi59iUcmEtqSOMCC?usp=sharing

2.5) Object Detection API (Fast API)
# make sure you are in yolov5 path
pwd

# copy prepared code
cp /data/detect_api.py .

# edit: 'detect_api.py' with vscode
# run: uvicorn
uvicorn  detect_api:app  --reload  --host 127.0.0.1  --port 1xxxx  # port = 10000+SuperAI ID
# --reload is for when we make change to the file so the api will reload and update it before running

# run in background with & or tmux, manage with: ps, kill

2.6) Port forwarding
# change local port 1xxxx to 80

2.7) Jupyter notebook support
# create ipynb

# try iris classification
cd
cp  /data/iris.ipynb  .

# edit: 'iris.ipynb' with vscode

3) Jupyter Notebook / Lab

3.1) Install
pip install jupyter

3.2) Setup
# generate config
jupyter notebook --generate-config
# go to path below to adjust config
Writing default config to: /home/superai2-1168/.jupyter/jupyter_notebook_config.py

# Adjust config
# edit: .jupyter/jupyter_notebook_config.py
# ----
c.NotebookApp.ip = ''        # '' or 0.0.0.0 = Internet, 127.0.0.1 = Local
c.NotebookApp.port = 2xxxx   # 20000+SuperAI ID
c.NotebookApp.open_browser = False
c.NotebookApp.quit_button = False
# ----

3.3) Set Password
jupyter notebook password

3.4) Run
jupyter notebook

#use browser to access vm3.superai.me:21168
#enter jupyter password

# run in background with & or tmux, manage with: ps, kill

3.5) Install / Run Jupyter Lab
pip install jupyterlab
jupyter lab

# run in background with & or tmux, manage with: ps, kill